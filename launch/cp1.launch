<!-- Launch file for challenge problem 1 -->
<launch>
  <!-- Parameters for the kobuki base with the kinect sensor -->
  <arg name="base" value="$(optenv TURTLEBOT_BASE kobuki)"/>
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>
  <arg name="stacks" value="$(optenv TURTLEBOT_STACKS hexagon)"/>

  <!-- The param file is turning off various navigation options on move_base to
       hamper the navigation -->
  <arg name="custom_param_file" value="$(find cp_gazebo)/param/move_base_params.yaml"/>

  <!-- This is the map file that will be used for planning -->
  <arg name="map_file" value="$(find cp_maps)/maps/Wean-entire-floor4.yaml"/>

  <!-- Start the gazebo world, so that obstacles can be mapped -->
  <!-- NOTE: The maze in the world might not be needed if the map server is required -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find cp_gazebo)/worlds/Wean-complete-floor4.world"/>
    <arg name="gui" value="false"/>
    <arg name="headless" value="true"/>
  </include>

  <!-- Spawn the turtlebot -->
  <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find cp_gazebo)robot_description/cp1-kinetic/urdf/kobuki_hexagons_kinect.urdf.xacro'" />
  <param name="robot_description" command="$(arg urdf_file)" />
  <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
        args="-x -40 -y 26.5 -unpause -urdf -param robot_description -model mobile_base"/>
 
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0"/>
  </node>
</launch>
